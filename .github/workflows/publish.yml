name: Publish NPM Package and Create Release

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to create a release and tag
      id-token: write # Needed for OIDC authentication with NPM
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch all history for all tags and branches
          fetch-depth: 0

      - name: Setup Node.js and cache dependencies
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
          cache: "bun"

      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run tests
        run: bun run test

      - name: Get package version
        id: package-version
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT

      - name: Check if version is already published
        id: check-npm
        run: |
          if npm view ${{ github.event.repository.name }}@${{ steps.package-version.outputs.version }} > /dev/null 2>&1; then
            echo "Version ${{ steps.package-version.outputs.version }} is already published."
            echo "published=false" >> $GITHUB_OUTPUT
          else
            echo "Version ${{ steps.package-version.outputs.version }} is new. Proceeding to publish."
            echo "published=true" >> $GITHUB_OUTPUT
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build package
        if: steps.check-npm.outputs.published == 'true'
        run: bun run build

      - name: Publish to NPM
        if: steps.check-npm.outputs.published == 'true'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.check-npm.outputs.published == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ steps.package-version.outputs.version }}"
          name: "Release v${{ steps.package-version.outputs.version }}"
          generate_release_notes: true
